<Window x:Class="PersonLibrary.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PersonLibrary"
        xmlns:viewmodels="clr-namespace:PersonLibrary.ViewModels"
        xmlns:converters="clr-namespace:PersonLibrary.Converters"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="A:\Проекты\PersonLibrary\PersonLibrary\Dictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--Border Style-->
            <Style TargetType="Border" x:Key="BorderStyle">
                <Setter Property="BorderBrush" Value="#FF0074E0"/>
                <Setter Property="Margin" Value="5" />
                <!--Width-->
                <Setter Property="Width">
                    <Setter.Value>
                        <MultiBinding Converter="{converters:ArithmeticConverter}"
                                  ConverterParameter="{x:Static converters:ArithmeticConverter+Operators.Division}">
                            <MultiBinding.Bindings>
                                <Binding Path="ActualWidth"
                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}" />
                                <Binding>
                                    <Binding.Source>
                                        <system:Double>
                                            2.2
                                        </system:Double>
                                    </Binding.Source>
                                </Binding>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                        Duration="0:0:0.3" To="#00BFFF" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                        Duration="0:0:0.3" To="#FF0074E0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>

                    <EventTrigger RoutedEvent="PreviewMouseDown">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                        Duration="0:0:0.1" To="#5F9EA0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="PreviewMouseUp">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                        Duration="0:0:0.1" To="#00BFFF"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <!--Button Style-->
            <Style TargetType="Button" x:Key="ButtonStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="button_border" BorderThickness="0"
                                            Background="{TemplateBinding Background}"
                                            Padding="{TemplateBinding Padding}">

                                <ContentControl x:Name="content_control" Foreground="{TemplateBinding Foreground}"
                                                        Content="{TemplateBinding Content}"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="button_border" Property="Background" Value="#4682B4"/>
                                    <Setter TargetName="content_control" Property="Foreground" Value="#C0C0C0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

    </Window.Resources>
    
    <Window.DataContext>
        <viewmodels:MainWindowViewModel />
    </Window.DataContext>

    <Window.Background>
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF15171E" Offset="0"/>
            <GradientStop Offset="0.482" Color="#FF15171E"/>
            <GradientStop Offset="1" Color="#FF15171E"/>
        </LinearGradientBrush>
    </Window.Background>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.5*" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <DataGrid x:Name="MainDataGrid" Grid.Row="1" Grid.Column="1"
                  AutoGenerateColumns="True"
                  CanUserResizeRows="False" CanUserResizeColumns="False"
                  CanUserAddRows="False" CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  ColumnWidth="*"
                  IsReadOnly="{Binding IsReadOnly}"
                  ItemsSource="{Binding List}"
                  SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Red" />
                            <Setter Property="Foreground" Value="Yellow" />
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>

        <StackPanel Grid.Row="2" Grid.Column="1"
                    Orientation="Horizontal"
                    Margin="30,0,0,0">
            <Border  
                Height="30"
                BorderThickness="2"
                CornerRadius="3"
                Style="{StaticResource BorderStyle}">
                <Button Background="#FF0074E0"
                    Content="Добавить" 
                    Foreground="White" 
                    FontSize="18"
                    FontFamily="oblique"
                    Padding="0,0,0,2"
                    Style="{StaticResource ButtonStyle}"
                    Command="{Binding ShowAddPersonCommand}">
                </Button>
            </Border>

            <Border  
                Height="30"
                BorderThickness="2"
                CornerRadius="3"
                Style="{StaticResource BorderStyle}">
                <Button Background="#FF0074E0"
                    Content="Редактировать" 
                    Foreground="White" 
                    FontSize="18"
                    FontFamily="oblique"
                    Padding="0,0,0,2"
                    Style="{StaticResource ButtonStyle}"
                    Command="{Binding RedactorPersonCommand}">
                </Button>
            </Border>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="0">
            <Button Height="30" Width="40"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Margin="0,0,5,0"
                    Command="{Binding SearchPersonCommand}">
                <Image HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{StaticResource SearchImage1}" />
                            <Style.Triggers>
                                <Trigger Property='IsMouseOver' Value="True">
                                    <Setter Property="Source" Value="{StaticResource SearchImage2}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <Label Content="Имя" Margin="15,20,0,0" Foreground="AliceBlue" 
                   Visibility="{Binding TextVisible, Converter={converters:BoolToVisibilityConverter}}"/>
            <TextBox Margin="20,0,20,0"
                     Visibility="{Binding TextVisible, Converter={converters:BoolToVisibilityConverter}}"
                     Text="{Binding NameString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Фамилия" Margin="15,0,0,0" Foreground="AliceBlue" 
                   Visibility="{Binding TextVisible, Converter={converters:BoolToVisibilityConverter}}"/>
            <TextBox Margin="20,0,20,20"
                     Visibility="{Binding TextVisible, Converter={converters:BoolToVisibilityConverter}}"
                     Text="{Binding SurNameString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Button Content="Найти" Margin="30,0,30,0"
                    Command="{Binding SearchPersonClickCommand}"
                    Visibility="{Binding TextVisible, Converter={converters:BoolToVisibilityConverter}}"/>
        </StackPanel>

        <Button Grid.Row="1" Grid.Column="2"
                Height="30" Width="40"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Margin="5,0,0,0"
                Visibility="{Binding DeleteButton, Converter={converters:BoolToVisibilityConverter}}"
                Command="{Binding DeletePersonCommand}">
            <Image HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Source" Value="{StaticResource DeleteImage1}" />
                        <Style.Triggers>
                            <Trigger Property='IsMouseOver' Value="True">
                                <Setter Property="Source" Value="{StaticResource DeleteImage2}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Button>

    </Grid>
</Window>
